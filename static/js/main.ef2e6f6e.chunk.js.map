{"version":3,"sources":["Joke.js","JokeList.js","App.js","serviceWorker.js","index.js"],"names":["Joke","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","votes","react_default","a","createElement","className","onClick","upvote","style","borderColor","getColor","downvote","text","getEmoji","Component","JokeList","_this","call","state","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","j","handleClick","bind","assertThisInitialized","length","getJokes","_getJokes","asyncToGenerator","regenerator_default","mark","_callee","res","newJoke","_this2","wrap","_context","prev","next","numJokesToGet","axios","get","headers","Accept","sent","data","joke","has","console","log","push","id","uuid","setState","st","concat","toConsumableArray","setItem","stringify","t0","alert","stop","delta","_this3","objectSpread","_this4","sort","b","src","src_Joke_0","handleVote","defaultProps","App","src_JokeList_0","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef2e6f6e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './Joke.css'\nexport class Joke extends Component {\n    getColor() {\n        if (this.props.votes >= 15) {\n          return \"#4CAF50\";\n        } else if (this.props.votes >= 12) {\n          return \"#8BC34A\";\n        } else if (this.props.votes >= 9) {\n          return \"#CDDC39\";\n        } else if (this.props.votes >= 6) {\n          return \"#FFEB3B\";\n        } else if (this.props.votes >= 3) {\n          return \"#FFC107\";\n        } else if (this.props.votes >= 0) {\n          return \"#FF9800\";\n        } else {\n          return \"#f44336\";\n        }\n      }\n      getEmoji() {\n        if (this.props.votes >= 15) {\n          return \"em em-rolling_on_the_floor_laughing\";\n        } else if (this.props.votes >= 12) {\n          return \"em em-laughing\";\n        } else if (this.props.votes >= 9) {\n          return \"em em-smiley\";\n        } else if (this.props.votes >= 6) {\n          return \"em em-slightly_smiling_face\";\n        } else if (this.props.votes >= 3) {\n          return \"em em-neutral_face\";\n        } else if (this.props.votes >= 0) {\n          return \"em em-confused\";\n        } else {\n          return \"em em-angry\";\n        }\n      }\n  render() {\n    return (\n    <div className='Joke'>\n        <div className='Joke-buttons'>\n          <i className='fas fa-arrow-up' onClick={this.props.upvote} />\n          <span className='Joke-votes' style={{ borderColor: this.getColor() }}>\n            {this.props.votes}\n          </span>\n          <i className='fas fa-arrow-down' onClick={this.props.downvote} />\n        </div>\n        <div className='Joke-text'>{this.props.text}</div>\n        <div className='Joke-smiley'>\n          <i className={this.getEmoji()} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Joke;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./JokeList.css\";\nimport Joke from \"./Joke\";\nimport uuid from \"uuid/v4\";\nexport class JokeList extends Component {\n  static defaultProps = {\n    numJokesToGet: 10\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: JSON.parse(window.localStorage.getItem('jokes')||\"[]\"),\n      loading:false\n    };\n    this.seenJokes = new Set(this.state.jokes.map(j => j.text));\n    this.handleClick = this.handleClick.bind(this);\n\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length === 0) this.getJokes();\n  }\n  async getJokes() {\n    try {\n      let jokes = [];\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com/\", {\n          headers: { Accept: \"application/json\" }\n        });\n        let newJoke = res.data.joke;\n        if (!this.seenJokes.has(newJoke)) {\n          jokes.push({ id: uuid(), text: newJoke, votes: 0 });\n        } else {\n          console.log(\"FOUND A DUPLICATE!\");\n          console.log(newJoke);\n        }\n      }\n      this.setState(\n        st => ({\n          loading: false,\n          jokes: [...st.jokes, ...jokes]\n        }),\n        () =>\n          window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\n      );\n    } catch (e) {\n      alert(e);\n      this.setState({ loading: false });\n    }\n  }\n  handleClick() {\n    this.setState({ loading: true }, this.getJokes);\n  }\n\n  handleVote(id, delta) {\n    this.setState(\n      st => ({\n        jokes: st.jokes.map(j =>\n          j.id === id ? { ...j, votes: j.votes + delta } : j\n        )\n      }),\n      () =>\n        window.localStorage.setItem(\"jokes\", JSON.stringify(this.state.jokes))\n    );\n  }\n  \n  render() {\n      if (this.state.loading) {\n          return (\n              <div className='JokeList-spinner'>\n            <i className='far fa-8x fa-laugh fa-spin' />\n            <h1 className='JokeList-title'>Loading...</h1>\n          </div>\n        );\n    }\n    let jokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\n    return (\n      <div className=\"JokeList\">\n        <div className=\"JokeList-sidebar\">\n          <h1 className=\"JokeList-title\">Jokes</h1>\n          <img src=\"https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg\" />\n          <button className=\"JokeList-getmore\" onClick={this.handleClick}>\n            Fetch Jokes\n          </button>\n        </div>\n        <div className=\"JokeList-jokes\">\n          {jokes.map(j => (\n            <Joke\n              key={j.id}\n              text={j.text}\n              votes={j.votes}\n              upvote={() => this.handleVote(j.id, 1)}\n              downvote={() => this.handleVote(j.id, -1)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JokeList;\n","import React from 'react';\nimport JokesList from './JokeList'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n  \n      <JokesList/>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}